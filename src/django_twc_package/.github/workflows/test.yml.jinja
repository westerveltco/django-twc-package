name: test

on:
  pull_request:
  push:
    branches: [main]
  workflow_call:

concurrency:
  group: test-${% raw %}{{ github.head_ref }}{% endraw %}
  cancel-in-progress: true

env:
  PYTHONUNBUFFERED: "1"
  FORCE_COLOR: "1"
  PY_MAX_VERSION: "{{ python_max_version }}"
  PY_MIN_VERSION: "{{ python_min_version }}"
  UV_VERSION: "0.4.x"

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${% raw %}{{ steps.set-matrix.outputs.matrix }}{% endraw %}
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          version: ${% raw %}{{ env.UV_VERSION }}{% endraw %}

      - name: Install Python
        run: uv python install ${% raw %}{{ env.PY_MIN_VERSION }}{% endraw %}

      - id: set-matrix
        run: |
          uv run nox --session "gha_matrix"

  test:
    name: Python ${% raw %}{{ matrix.python-version }}{% endraw %}, Django ${% raw %}{{ matrix.django-version }}{% endraw %}
    runs-on: ubuntu-latest
    needs: generate-matrix
    strategy:
      fail-fast: false
      matrix: ${% raw %}{{ fromJSON(needs.generate-matrix.outputs.matrix) }}{% endraw %}
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          version: ${% raw %}{{ env.UV_VERSION }}{% endraw %}

      - name: Install Python
        run: uv python install ${% raw %}{{ matrix.python-version }}{% endraw %}

      - name: Run tests
        run: |
          uv run nox --session "tests(python='${% raw %}{{ matrix.python-version }}{% endraw %}', django='${% raw %}{{ matrix.django-version }}{% endraw %}')"

  tests:
    runs-on: ubuntu-latest
    needs: test
    if: always()
    steps:
      - name: OK
        if: ${% raw %}{{ !(contains(needs.*.result, 'failure')) }}{% endraw %}
        run: exit 0
      - name: Fail
        if: ${% raw %}{{ contains(needs.*.result, 'failure') }}{% endraw %}
        run: exit 1

  types:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          version: ${% raw %}{{ env.UV_VERSION }}{% endraw %}

      - name: Install Python
        run: uv python install ${% raw %}{{ env.PY_MAX_VERSION }}{% endraw %}

      - name: Run mypy
        run: |
          uv run nox --session "types"

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          version: ${% raw %}{{ env.UV_VERSION }}{% endraw %}

      - name: Install Python
        run: uv python install ${% raw %}{{ env.PY_MIN_VERSION }}{% endraw %}

      - name: Run mypy
        run: |
          uv run nox --session "coverage"
